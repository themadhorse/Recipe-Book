{"version":3,"sources":["./src/app/auth/auth/auth.component.ts","./src/app/auth/auth/auth.component.html","./src/app/auth/auth.module.ts"],"names":[],"mappings":"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","file":"auth-auth-module.287fdbfdfc9c7aff25e6.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport * as AuthActions from '../store/auth.actions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit, OnDestroy {\r\n  isLogInMode = true;\r\n  isLoading = false;\r\n  isSignedUp = false;\r\n  error: string = null;\r\n  @ViewChild(\"f\", { static: false }) authForm: NgForm;\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor(private store: Store<fromApp.AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.store.select(\"auth\").subscribe(\r\n      authState => {\r\n        this.isLoading = authState.loading;\r\n        this.error = authState.authError;\r\n        this.isSignedUp = authState.hasSignedUp;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSwitch(){\r\n    this.isLogInMode = !this.isLogInMode;\r\n    this.store.dispatch(new AuthActions.Clear_Messages());\r\n  }\r\n\r\n  onSubmit(){\r\n    if(!this.authForm.valid)\r\n      return;\r\n    const email: string = this.authForm.value.email;\r\n    const password: string = this.authForm.value.password;\r\n\r\n    //let authObs: Observable<AuthResponseData>;\r\n    \r\n    this.isLoading = true;\r\n    if(this.isLogInMode)\r\n    {\r\n      //authObs = this.authService.login(email, password);\r\n      this.store.dispatch(new AuthActions.Login_Start({ email: email, password: password }));\r\n    }\r\n    else\r\n    {\r\n      this.store.dispatch(new AuthActions.Signup_Start({ email: email, password: password }));\r\n\r\n    }\r\n\r\n    \r\n    // authObs.subscribe(\r\n    //   responseData => {\r\n    //     console.log(responseData);\r\n    //     this.error = null;\r\n    //     this.isLoading = false; \r\n\r\n    //     if(this.isLogInMode)\r\n    //       this.router.navigate(['/recipes']);\r\n    //     else\r\n    //       this.isSignedUp = true;\r\n    //   },\r\n    //   errorMsg => { this.isSignedUp = false; this.error = errorMsg; this.isLoading = false; }\r\n    // );\r\n    this.authForm.reset();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.subscription)\r\n      this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"error && !isLoading\">\r\n            <p><b>Error: </b>{{ error }}</p>\r\n        </div>\r\n        <div class=\"alert alert-success\" *ngIf=\"isSignedUp\">\r\n            <p>Sign up successful!</p>\r\n        </div>\r\n        <div class=\"spinner\" *ngIf=\"isLoading\">\r\n            <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" class=\"form-control\" ngModel name=\"email\" required email>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" class=\"form-control\" ngModel name=\"password\" required minlength=\"6\">\r\n            </div>\r\n            <button class=\"btn btn-success\" [disabled]=\"!f.valid\">{{ isLogInMode ? \"Log in\" : \"Sign up\"}}</button> | \r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSwitch()\">Switch to {{ isLogInMode ? \"Signup\" : \"Login\"}}</button>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { AuthComponent } from \"./auth/auth.component\";\r\n\r\n@NgModule({\r\n    declarations: [AuthComponent],\r\n    imports: [\r\n        SharedModule,\r\n        FormsModule,\r\n        RouterModule.forChild([{ path: '', component: AuthComponent}])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthModule { }"],"sourceRoot":"webpack:///"}