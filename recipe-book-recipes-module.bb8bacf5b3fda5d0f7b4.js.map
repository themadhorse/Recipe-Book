{"version":3,"sources":["./src/app/recipe-book/recipe-edit/recipe-edit.component.ts","./src/app/recipe-book/recipe-edit/recipe-edit.component.html","./src/app/recipe-book/recipes.module.ts","./src/app/recipe-book/recipes.resolver.service.ts","./src/app/recipe-book/recipe.model.ts","./src/app/auth/auth/auth.guard.ts","./src/app/recipe-book/recipe-list/recipe-list.component.ts","./src/app/recipe-book/recipe-list/recipe-list.component.html","./src/app/recipe-book/globalRecipes.resolver.service.ts","./src/app/recipe-book/recipe-book.component.ts","./src/app/recipe-book/recipe-book.component.html","./src/app/recipe-book/recipe-item/recipe-item.component.ts","./src/app/recipe-book/recipe-item/recipe-item.component.html","./src/app/recipe-book/select-recipe/select-recipe.component.ts","./src/app/recipe-book/select-recipe/select-recipe.component.html","./src/app/recipe-book/recipe-detail/recipe-detail.component.ts","./src/app/recipe-book/recipe-detail/recipe-detail.component.html","./src/app/recipe-book/recipes-routing.module.ts"],"names":[],"mappings":"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","file":"recipe-book-recipes-module.bb8bacf5b3fda5d0f7b4.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport * as RecipeActions from '../store/recipe.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit, OnDestroy {\r\n  id: number;\r\n  editMode = false;\r\n  recipeForm: FormGroup;\r\n  subscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute, private recipeService: RecipeService, private router: Router, private store: Store<fromApp.AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.pipe(\r\n      map((params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        }\r\n      ),\r\n      switchMap(() => this.store.select('recipes')),\r\n      map(recipeState => [...recipeState.globalRecipes, ...recipeState.recipes]),\r\n      map((recipes: Recipe[]) => recipes[this.id])\r\n      ).subscribe((recipe: Recipe) => {\r\n        this.initForm(recipe);\r\n      })\r\n  }\r\n\r\n  private initForm(selectedRecipe: Recipe) {\r\n    let recipeName = \"\";\r\n    let recipeImgPath = \"\";\r\n    let recipeDescription = \"\";\r\n    let isRecipeGlobal = false;\r\n    let recipeIngredients = new FormArray([]);\r\n\r\n    if (this.editMode) {\r\n          const recipe = selectedRecipe;\r\n          recipeName = recipe.name;\r\n          isRecipeGlobal = recipe.isGlobal;\r\n          recipeImgPath = recipe.imgPath;\r\n          if (recipe['ingredients']) {\r\n            for (let ingredient of recipe['ingredients']) {\r\n              recipeIngredients.push(\r\n                new FormGroup({\r\n                  'name': new FormControl(ingredient.name, Validators.required),\r\n                  'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\r\n                })\r\n              );\r\n            }\r\n          }\r\n          recipeDescription = recipe.description;\r\n    }\r\n\r\n    this.recipeForm = new FormGroup({\r\n      'name': new FormControl(recipeName, Validators.required),\r\n      'description': new FormControl(recipeDescription, Validators.required),\r\n      'imgPath': new FormControl(recipeImgPath, Validators.required),\r\n      'isGlobal': new FormControl(isRecipeGlobal, Validators.required),\r\n      'ingredients': recipeIngredients\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    //this.recipeService.addRecipe(new Recipe(this.recipeForm.get('name').value, this.recipeForm.get('description').value, this.recipeForm.get('imgPath').value, this.recipeForm.get('ingredients').value), this.id, this.editMode);\r\n    if(this.editMode)\r\n    {\r\n      const recipeToBeUpdated = new Recipe(this.recipeForm.get('name').value, this.recipeForm.get('description').value, this.recipeForm.get('imgPath').value, this.recipeForm.get('ingredients').value, this.recipeForm.get('isGlobal').value);\r\n\r\n      if(this.recipeForm.get('isGlobal').value)\r\n        this.store.dispatch(new RecipeActions.UpdateGlobalRecipe({index: this.id, newRecipe: recipeToBeUpdated}))\r\n      else\r\n      this.store.dispatch(new RecipeActions.UpdateRecipe({index: this.id, newRecipe: recipeToBeUpdated}))\r\n    }\r\n    else\r\n    {\r\n      const recipeToBeAdded = new Recipe(this.recipeForm.get('name').value, this.recipeForm.get('description').value, this.recipeForm.get('imgPath').value, this.recipeForm.get('ingredients').value, this.recipeForm.get('isGlobal').value);\r\n\r\n      if(this.recipeForm.get('isGlobal').value)\r\n        this.store.dispatch(new RecipeActions.AddGlobalRecipe(recipeToBeAdded));\r\n      else\r\n        this.store.dispatch(new RecipeActions.AddRecipe(recipeToBeAdded));\r\n    }\r\n    this.onCancel();\r\n  }\r\n\r\n  get controls() {\r\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\r\n  }\r\n\r\n  onAddIngredient() {\r\n    (<FormArray>this.recipeForm.get('ingredients')).push(\r\n      new FormGroup({\r\n        'name': new FormControl(null, Validators.required),\r\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\r\n      })\r\n    );\r\n  }\r\n\r\n  onCancel() {\r\n    if (this.editMode)\r\n      this.router.navigate(['/recipes', this.id]);\r\n    else\r\n      this.router.navigate(['/recipes']);\r\n  }\r\n\r\n  delIngredient(index: number) {\r\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.subscription)\r\n      this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Recipe Name</label>\r\n                        <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"description\">Description</label>\r\n                        <textarea rows=\"4\" id=\"description\" class=\"form-control\"\r\n                        formControlName=\"description\"></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"imgPath\">Image Path</label>\r\n                            <input id=\"imgPath\" type=\"text\"\r\n                            formControlName=\"imgPath\"\r\n                            class=\"form-control\" #path>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-12\">\r\n                            <img [src]=\"path.value\" class=\"img-responsive\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xs-12\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"custom-control custom-switch\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-xs-5\">\r\n                        <label for=\"globalSwitch\">Should this recipe be made global </label>\r\n                        <p class=\"text-muted form-text\">This action is irreversible</p>\r\n                      </div>\r\n                      <div class=\"col-xs-7\">\r\n                        <input type=\"checkbox\" id=\"globalSwitch\" formControlName=\"isGlobal\" style=\"margin-left: -12%;\" [attr.disabled]=\"editMode?'':null\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\" formArrayName=\"ingredients\">\r\n                    <label for=\"\">Ingredients</label>\r\n                    <div class=\"row\" *ngFor=\"let ingredientCtrl of controls; let i = index\"\r\n                     [formGroupName]=\"i\" style=\"margin-top: 2px;\">\r\n                        <div class=\"col-xs-8\">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                        </div>\r\n                        <div class=\"col-xs-2\">\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"amount\">\r\n                        </div>\r\n                        <div class=\"col-xs-2\">\r\n                            <button id=\"X\" class=\"btn btn-danger\" type=\"button\" (click)=\"delIngredient(i)\">X</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-12\">\r\n                            <button class=\"btn btn-neutral \" (click)=\"onAddIngredient()\" type=\"button\">Add Ingredient</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <hr>\r\n                    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"recipeForm.invalid\">{{ editMode ? 'Save' : 'Add' }}</button>\r\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n\r\nimport { RecipeBookComponent } from \"./recipe-book.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeItemComponent } from \"./recipe-item/recipe-item.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { SelectRecipeComponent } from \"./select-recipe/select-recipe.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RecipeBookComponent,\r\n        RecipeListComponent,\r\n        RecipeItemComponent,\r\n        RecipeDetailComponent,\r\n        RecipeEditComponent,\r\n        SelectRecipeComponent,\r\n    ],\r\n    imports: [\r\n        RouterModule, \r\n        SharedModule,\r\n        ReactiveFormsModule,\r\n        RecipesRoutingModule\r\n    ]\r\n})\r\nexport class RecipesModule { }","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { DataStorageService } from \"../shared/data-storage.service\";\r\n\r\nimport { Recipe } from \"./recipe.model\";\r\nimport { RecipeService } from \"./recipe.service\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as RecipeActions from './store/recipe.actions';\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Actions, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { take, map, switchMap } from \"rxjs/operators\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RecipesResolverService implements Resolve<Recipe[]>{\r\n\r\n    constructor(private store: Store<fromApp.AppState>, private actions$: Actions){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n        return this.store.select('recipes').pipe(\r\n            take(1),\r\n            map(recipeState => recipeState.recipes),\r\n            switchMap((recipes: Recipe[]) => {\r\n                if(recipes.length === 0)\r\n                {\r\n                    this.store.dispatch(new RecipeActions.FetchRecipes());\r\n                    return this.actions$.pipe(\r\n                        ofType(RecipeActions.SET_RECIPES),\r\n                        take(1)\r\n                    );\r\n                } else {\r\n                    return of(recipes)\r\n                }\r\n            })\r\n        )\r\n    }\r\n}\r\n","import { Ingredient } from '../shared/ingredient.model';\r\n\r\nexport class Recipe{\r\n\r\n    constructor(\r\n        public name: string,\r\n        public description: string,\r\n        public imgPath: string,\r\n        public ingredients: Ingredient[],\r\n        public isGlobal: boolean = false\r\n        ){}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\nimport { AppState } from \"src/app/store/app.reducer\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private authService: AuthService, private router: Router, private store: Store<AppState>){}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree>{\r\n        return this.store.select('auth').pipe(take(1), \r\n            map(authState => authState.user),\r\n            map(user => {\r\n            const isAuth = !!user;\r\n            if(isAuth)\r\n                return true;\r\n            else\r\n                return this.router.createUrlTree(['/auth']);\r\n        }));\r\n    }\r\n}","import { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport * as RecipeActions from '../store/recipe.actions';\r\n\r\nimport { Recipe } from '../recipe.model';\r\n\r\nimport { RecipeService } from '../recipe.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-recipe-list',\r\n  templateUrl: './recipe-list.component.html',\r\n  styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent implements OnInit, OnDestroy {\r\n  recipes: Recipe[];\r\n  isTrue = false;\r\n  subscription: Subscription;\r\n\r\n  constructor(public recipeService: RecipeService, private store: Store<fromApp.AppState>) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  // this.recipes = this.recipeService.getRecipes();\r\n  // this.subscription = this.recipeService.recipesChanged.subscribe(\r\n  //   (updatedRecipes: Recipe[]) => {\r\n  //       this.recipes = updatedRecipes;\r\n  //   }\r\n  // );\r\n  this.subscription = this.store.select('recipes')\r\n  .pipe(map(recipeState => [...recipeState.globalRecipes, ...recipeState.recipes]))\r\n  .subscribe((recipes: Recipe[]) => { this.recipes = recipes })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <button class=\"btn btn-success\" routerLink=\"new\">New Recipe</button>\r\n    </div>\r\n</div>\r\n<hr>\r\n<div class=\"row\" style=\"overflow-y: auto;\">\r\n    <div class=\"col-xs-12\">\r\n        <app-recipe-item\r\n        routerLinkActive=\"active\"\r\n        *ngFor=\"let recipe of recipes; let i = index\" [currentRecipe] = \"recipe\" [index]=\"i\"></app-recipe-item>\r\n    </div>\r\n</div>\r\n<hr>\r\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Recipe } from \"./recipe.model\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport { Actions, ofType } from \"@ngrx/effects\";\r\nimport * as RecipeActions from './store/recipe.actions';\r\nimport { of } from \"rxjs\";\r\nimport { take, map, switchMap } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GlobalRecipesResolverService implements Resolve<Recipe[]> {\r\n\r\n  constructor(private store: Store<fromApp.AppState>, private action$: Actions) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.store.select('recipes').pipe(\r\n      take(1),\r\n      map(recipeState => recipeState.globalRecipes),\r\n      switchMap((globalRecipes: Recipe[]) => {\r\n        if(globalRecipes.length === 0)\r\n        {\r\n          this.store.dispatch(new RecipeActions.FetchGlobalRecipes());\r\n          return this.action$.pipe(\r\n            ofType(RecipeActions.SET_GLOBAL_RECIPES),\r\n            take(1)\r\n          );\r\n        }\r\n        else {\r\n          return of(globalRecipes);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport html2canvas from 'html2canvas';\r\nimport { jsPDF } from 'jspdf';\r\n\r\n@Component({\r\n  selector: 'app-recipe-book',\r\n  templateUrl: './recipe-book.component.html',\r\n  styleUrls: ['./recipe-book.component.css']\r\n})\r\nexport class RecipeBookComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // htmlToPdf() {\r\n  //   html2canvas(document.querySelector(\"#test\")).then((canvas) => {\r\n  //     let pdf = new jsPDF('p', 'pt', [canvas.width, canvas.height]);\r\n\r\n  //     let imgData = canvas.toDataURL('image/jpeg', 1.0);\r\n  //     pdf.addImage(imgData,0,0,canvas.width, canvas.height);\r\n  //     pdf.save('Huh');\r\n  //   })\r\n  // }\r\n}\r\n","<div class=\"row\" id=\"test\">\r\n    <div class=\"col-md-5\">\r\n        <app-recipe-list></app-recipe-list>\r\n    </div>\r\n    <br>\r\n    <div class=\"col-md-7\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-item',\r\n  templateUrl: './recipe-item.component.html',\r\n  styleUrls: ['./recipe-item.component.css'],\r\n  animations: [\r\n    trigger('addRecipe', [\r\n      state('in', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('void => *', [style({opacity: 0, transform: 'translateX(-100px)'}), animate(200)]),\r\n      //transition('* => void', [animate(1000), style({opacity: 0, transform: 'translateX(-100px)'})])\r\n    ])\r\n  ]\r\n})\r\nexport class RecipeItemComponent implements OnInit {\r\n  @Input(\"currentRecipe\") recipe: Recipe;\r\n  @Input('index') index: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<a class=\"list-group-item clearfix\"\r\n    [@addRecipe]\r\n    [routerLink]=\"[index]\"\r\n    style=\"cursor: pointer\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-9\" id=\"recipe\">\r\n            <h4 class=\"list-group-item-heading\">\r\n              <b>{{ recipe.name }}</b>\r\n              <i class=\"bi bi-diamond-fill\" *ngIf=\"recipe.isGlobal\"></i>\r\n            </h4>\r\n            <p class=\"list-group-item-text\">{{ recipe.description }}</p>\r\n        </div>\r\n        <span class=\"col-xs-3\">\r\n            <img [src]=\"recipe.imgPath\" alt=\"{{ recipe.name }}\" class=\"img-responsive\" style=\"max-height: 55px;\">\r\n        </span>\r\n    </div>\r\n</a>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select-recipe',\r\n  templateUrl: './select-recipe.component.html',\r\n  styleUrls: ['./select-recipe.component.css']\r\n})\r\nexport class SelectRecipeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p class=\"text-center\">Please select a recipe</p>\r\n   \r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport * as RecipeActions from '../store/recipe.actions';\r\nimport * as ShoppingListActions from '../../shopping/store/shopping-list.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-recipe-detail',\r\n  templateUrl: './recipe-detail.component.html',\r\n  styleUrls: ['./recipe-detail.component.css'],\r\n})\r\nexport class RecipeDetailComponent implements OnInit, OnDestroy {\r\n  selectedRecipe: Recipe;\r\n  id: number;\r\n  subscription: Subscription;\r\n  globalLength: number;\r\n\r\n  constructor(\r\n    private recipeService: RecipeService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private store: Store<fromApp.AppState>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.route.params\r\n      .pipe(\r\n        map((params: Params) => {\r\n          this.id = +params['id'];\r\n        }),\r\n        switchMap(() => this.store.select('recipes')),\r\n        map((recipeState) => {\r\n          this.globalLength = recipeState.globalRecipes.length;\r\n          return [\r\n          ...recipeState.globalRecipes,\r\n          ...recipeState.recipes,\r\n          ]\r\n      }),\r\n        map((recipes: Recipe[]) => recipes[this.id])\r\n      )\r\n      .subscribe((recipe: Recipe) => {\r\n        this.selectedRecipe = recipe;\r\n      });\r\n  }\r\n\r\n  toShoppingList() {\r\n    const ingredientsCopy = JSON.parse(\r\n      JSON.stringify(this.selectedRecipe.ingredients)\r\n    );\r\n    //this.shoppingListService.addIngredients(ingredientsCopy);\r\n    //this.recipeService.toShoppingList(ingredientsCopy);\r\n    this.store.dispatch(\r\n      new ShoppingListActions.AddIngredients(ingredientsCopy)\r\n    );\r\n  }\r\n\r\n  onDelete() {\r\n    //this.recipeService.deleteRecipe(this.id);\r\n    if (this.selectedRecipe.isGlobal)\r\n      this.store.dispatch(new RecipeActions.DeleteGlobalRecipe(this.id));\r\n    else\r\n      this.store.dispatch(new RecipeActions.DeleteRecipe(this.id-this.globalLength));\r\n\r\n    this.router.navigate(['/recipes']);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) this.subscription.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <img [src]=\"selectedRecipe.imgPath\" alt=\"\" class=\"img-responsive\">\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <h1>{{ selectedRecipe.name }}</h1>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <div class=\"btn-group\" appDropdown>\r\n            <button class=\"btn btn-primary dropdown-toggle\">\r\n            Manage Recipe\r\n            <span class=\"caret\"></span>\r\n            </button>\r\n            <ul class=\"dropdown-menu\">\r\n                <li><a style=\"cursor: pointer\"\r\n                    (click)=\"toShoppingList()\">Add To Shopping List</a></li>\r\n                <li><a style=\"cursor: pointer\" routerLink=\"edit\">Edit Recipe</a></li>\r\n                <li ><a style=\"cursor: pointer\" (click)=\"onDelete()\">Delete Recipe</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <hr>\r\n        {{ selectedRecipe.description }}\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <ul class=\"list-group\">\r\n            <hr>\r\n            <h3 class=\"text-center\"><b>Ingredients</b></h3>\r\n            <li class=\"list-group-item\"\r\n            *ngFor=\"let ingredient of selectedRecipe.ingredients\">{{  ingredient.name }} <span class=\"pull-right\">{{ ingredient.amount }}</span></li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<!-- *ngIf=\"id===0?false:true\" -->\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"../auth/auth/auth.guard\";\r\nimport { GlobalRecipesResolverService } from \"./globalRecipes.resolver.service\";\r\nimport { RecipeBookComponent } from \"./recipe-book.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipesResolverService } from \"./recipes.resolver.service\";\r\nimport { SelectRecipeComponent } from \"./select-recipe/select-recipe.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: RecipeBookComponent,\r\n         canActivate: [AuthGuard],\r\n         children: [\r\n            { path: 'new', component: RecipeEditComponent, resolve: [RecipesResolverService, GlobalRecipesResolverService]}, //resolve: [RecipesResolverService]\r\n            { path: ':id', component: RecipeDetailComponent, resolve: [RecipesResolverService, GlobalRecipesResolverService] },\r\n            { path: '', component: SelectRecipeComponent, pathMatch: 'full'},\r\n            { path: ':id/edit', component: RecipeEditComponent, resolve: [RecipesResolverService, GlobalRecipesResolverService] }\r\n    ] },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RecipesRoutingModule {\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}